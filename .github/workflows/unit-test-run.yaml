name: Run Tests
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  run-tests:
    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: './AcademyCleanTesting.sln'
    runs-on: ubuntu-latest
    
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-CU14-ubuntu-22.04
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: yourStrong(!)Password
          MSSQL_PID: Express
        ports:
          - 1433:1433

    steps:
      - name: check out the repo
        uses: actions/checkout@v4

      - name: .NET Core Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
          cache: true

      - name: Display dotnet version
        run: | 
          dotnet --version

      - name: Display docker version
        run: docker --version

      - name: .NET Restore
        run: dotnet restore $SOLUTION 

      - name: .NET Build
        run: dotnet build $SOLUTION --no-restore --configuration $BUILD_CONFIG

      - name: .NET Test
        run: dotnet test ./tests/Application.Integration.Tests --configuration $BUILD_CONFIG --logger "trx;LogFileName=test-results.trx" || true
      
      - name: Generate Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: .NET Test Report
          path: "**/test-results.trx"                            
          reporter: dotnet-trx
          fail-on-error: true
      
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results-Application-Integration-Tests
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: .NET Test for the whole solution
        run: dotnet test $SOLUTION --no-restore --configuration $BUILD_CONFIG --logger "trx;LogFileName=test-results-sln.trx" || true

